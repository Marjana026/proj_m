@page
@model IndexModel
@{
    ViewData["Title"] = "Posts";
}

<h2>Posts</h2>
<table>
    <thead>
        <tr>
            <th>Title</th>
            <th>Author</th>
            <th>Category</th>
            <th>Published</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var post in Model.Posts)
    {
        <tr>
            <td>@post.Title</td>
            <td>@post.Author</td>
            <td>@post.Category?.Name</td>
            <td>@post.PublishedDate.ToShortDateString()</td>
            <td>
                <a asp-page="/Edit" asp-route-id="@post.Id">Edit</a> |
                <a asp-page="/Delete" asp-route-id="@post.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@code {
    using Microsoft.EntityFrameworkCore;
    using SyncSyntax.Data;
    using SyncSyntax.Models;
    using System.Collections.Generic;
    using System.Linq;

    public class IndexModel : PageModel
    {
        private readonly AppDbContext _context;
        public IndexModel(AppDbContext context)
        {
            _context = context;
        }

        public List<Post> Posts { get; set; }

        public void OnGet()
        {
            Posts = _context.Posts
                .Include(p => p.Category)
                .OrderByDescending(p => p.PublishedDate)
                .ToList();
        }
    }
}
